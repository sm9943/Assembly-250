


ARM Macro Assembler    Page 1 Program Title for Listing Header Goes Here


    1 00000000                 TTL              Program Title for Listing Header Goes Here
    2 00000000         ;****************************************************************
    3 00000000         ;Memory usage activity: To store and use variables to solve a linear
    4 00000000         ; equation in two variables. 
    5 00000000         ;Name:  Shubhang Mehrotra
    6 00000000         ;Date:  02/11/2021
    7 00000000         ;Class:  CMPE-250
    8 00000000         ;Section:  Section 1: Thursday, 2PM
    9 00000000         ;---------------------------------------------------------------
   10 00000000         ;Keil Simulator Template for KL05
   11 00000000         ;R. W. Melton
   12 00000000         ;January 21, 2021
   13 00000000         ;****************************************************************
   14 00000000         ;Assembler directives
   15 00000000                 THUMB
   17 00000000         ;****************************************************************
   18 00000000         ;EQUates
   19 00000000 00000001 
                       MUL2    EQU              1
   20 00000000 00000002 
                       MUL4    EQU              2
   21 00000000         ;Standard data masks
   22 00000000 000000FF 
                       BYTE_MASK
                               EQU              0xFF
   23 00000000 0000000F 
                       NIBBLE_MASK
                               EQU              0x0F
   24 00000000         ;Standard data sizes (in bits)
   25 00000000 00000008 
                       BYTE_BITS
                               EQU              8
   26 00000000 00000004 
                       NIBBLE_BITS
                               EQU              4
   27 00000000         ;Architecture data sizes (in bytes)
   28 00000000 00000004 
                       WORD_SIZE
                               EQU              4           ;Cortex-M0+
   29 00000000 00000002 
                       HALFWORD_SIZE
                               EQU              2           ;Cortex-M0+



ARM Macro Assembler    Page 2 Program Title for Listing Header Goes Here


   30 00000000         ;Architecture data masks
   31 00000000 0000FFFF 
                       HALFWORD_MASK
                               EQU              0xFFFF
   32 00000000         ;Return                 
   33 00000000 00000001 
                       RET_ADDR_T_MASK
                               EQU              1           ;Bit 0 of ret. addr. must be
   34 00000000         ;set for BX, BLX, or POP
   35 00000000         ;mask in thumb mode
   36 00000000         ;---------------------------------------------------------------
   37 00000000         ;Vectors
   38 00000000 000000C0 
                       VECTOR_TABLE_SIZE
                               EQU              0x000000C0  ;KL05
   39 00000000 00000004 
                       VECTOR_SIZE
                               EQU              4           ;Bytes per vector
   40 00000000         ;---------------------------------------------------------------
   41 00000000         ;CPU CONTROL:  Control register
   42 00000000         ;31-2:(reserved)
   43 00000000         ;   1:SPSEL=current stack pointer select
   44 00000000         ;           0=MSP (main stack pointer) (reset value)
   45 00000000         ;           1=PSP (process stack pointer)
   46 00000000         ;   0:nPRIV=not privileged
   47 00000000         ;        0=privileged (Freescale/NXP "supervisor") (reset value)
   48 00000000         ;        1=not privileged (Freescale/NXP "user")
   49 00000000 00000002 
                       CONTROL_SPSEL_MASK
                               EQU              2
   50 00000000 00000001 
                       CONTROL_SPSEL_SHIFT
                               EQU              1
   51 00000000 00000001 
                       CONTROL_nPRIV_MASK
                               EQU              1
   52 00000000 00000000 
                       CONTROL_nPRIV_SHIFT
                               EQU              0
   53 00000000         ;---------------------------------------------------------------
   54 00000000         ;CPU PRIMASK:  Interrupt mask register
   55 00000000         ;31-1:(reserved)



ARM Macro Assembler    Page 3 Program Title for Listing Header Goes Here


   56 00000000         ;   0:PM=prioritizable interrupt mask:
   57 00000000         ;        0=all interrupts unmasked (reset value)
   58 00000000         ;          (value after CPSIE I instruction)
   59 00000000         ;        1=prioritizable interrrupts masked
   60 00000000         ;          (value after CPSID I instruction)
   61 00000000 00000001 
                       PRIMASK_PM_MASK
                               EQU              1
   62 00000000 00000000 
                       PRIMASK_PM_SHIFT
                               EQU              0
   63 00000000         ;---------------------------------------------------------------
   64 00000000         ;CPU PSR:  Program status register
   65 00000000         ;Combined APSR, EPSR, and IPSR
   66 00000000         ;----------------------------------------------------------
   67 00000000         ;CPU APSR:  Application Program Status Register
   68 00000000         ;31  :N=negative flag
   69 00000000         ;30  :Z=zero flag
   70 00000000         ;29  :C=carry flag
   71 00000000         ;28  :V=overflow flag
   72 00000000         ;27-0:(reserved)
   73 00000000 F0000000 
                       APSR_MASK
                               EQU              0xF0000000
   74 00000000 0000001C 
                       APSR_SHIFT
                               EQU              28
   75 00000000 80000000 
                       APSR_N_MASK
                               EQU              0x80000000
   76 00000000 0000001F 
                       APSR_N_SHIFT
                               EQU              31
   77 00000000 40000000 
                       APSR_Z_MASK
                               EQU              0x40000000
   78 00000000 0000001E 
                       APSR_Z_SHIFT
                               EQU              30
   79 00000000 20000000 
                       APSR_C_MASK
                               EQU              0x20000000



ARM Macro Assembler    Page 4 Program Title for Listing Header Goes Here


   80 00000000 0000001D 
                       APSR_C_SHIFT
                               EQU              29
   81 00000000 10000000 
                       APSR_V_MASK
                               EQU              0x10000000
   82 00000000 0000001C 
                       APSR_V_SHIFT
                               EQU              28
   83 00000000         ;----------------------------------------------------------
   84 00000000         ;CPU EPSR
   85 00000000         ;31-25:(reserved)
   86 00000000         ;   24:T=Thumb state bit
   87 00000000         ;23- 0:(reserved)
   88 00000000 01000000 
                       EPSR_MASK
                               EQU              0x01000000
   89 00000000 00000018 
                       EPSR_SHIFT
                               EQU              24
   90 00000000 01000000 
                       EPSR_T_MASK
                               EQU              0x01000000
   91 00000000 00000018 
                       EPSR_T_SHIFT
                               EQU              24
   92 00000000         ;----------------------------------------------------------
   93 00000000         ;CPU IPSR
   94 00000000         ;31-6:(reserved)
   95 00000000         ; 5-0:Exception number=number of current exception
   96 00000000         ;      0=thread mode
   97 00000000         ;      1:(reserved)
   98 00000000         ;      2=NMI
   99 00000000         ;      3=hard fault
  100 00000000         ;      4-10:(reserved)
  101 00000000         ;     11=SVCall
  102 00000000         ;     12-13:(reserved)
  103 00000000         ;     14=PendSV
  104 00000000         ;     15=SysTick
  105 00000000         ;     16=IRQ0
  106 00000000         ;     16-47:IRQ(Exception number - 16)
  107 00000000         ;     47=IRQ31



ARM Macro Assembler    Page 5 Program Title for Listing Header Goes Here


  108 00000000         ;     48-63:(reserved)
  109 00000000 0000003F 
                       IPSR_MASK
                               EQU              0x0000003F
  110 00000000 00000000 
                       IPSR_SHIFT
                               EQU              0
  111 00000000 0000003F 
                       IPSR_EXCEPTION_MASK
                               EQU              0x0000003F
  112 00000000 00000000 
                       IPSR_EXCEPTION_SHIFT
                               EQU              0
  113 00000000         ;----------------------------------------------------------
  114 00000000 80000000 
                       PSR_N_MASK
                               EQU              APSR_N_MASK
  115 00000000 0000001F 
                       PSR_N_SHIFT
                               EQU              APSR_N_SHIFT
  116 00000000 40000000 
                       PSR_Z_MASK
                               EQU              APSR_Z_MASK
  117 00000000 0000001E 
                       PSR_Z_SHIFT
                               EQU              APSR_Z_SHIFT
  118 00000000 20000000 
                       PSR_C_MASK
                               EQU              APSR_C_MASK
  119 00000000 0000001D 
                       PSR_C_SHIFT
                               EQU              APSR_C_SHIFT
  120 00000000 10000000 
                       PSR_V_MASK
                               EQU              APSR_V_MASK
  121 00000000 0000001C 
                       PSR_V_SHIFT
                               EQU              APSR_V_SHIFT
  122 00000000 01000000 
                       PSR_T_MASK
                               EQU              EPSR_T_MASK
  123 00000000 00000018 



ARM Macro Assembler    Page 6 Program Title for Listing Header Goes Here


                       PSR_T_SHIFT
                               EQU              EPSR_T_SHIFT
  124 00000000 0000003F 
                       PSR_EXCEPTION_MASK
                               EQU              IPSR_EXCEPTION_MASK
  125 00000000 00000000 
                       PSR_EXCEPTION_SHIFT
                               EQU              IPSR_EXCEPTION_SHIFT
  126 00000000         ;----------------------------------------------------------
  127 00000000         ;Stack
  128 00000000 00000100 
                       SSTACK_SIZE
                               EQU              0x00000100
  129 00000000         ;****************************************************************
  130 00000000         ;Program
  131 00000000         ;Linker requires Reset_Handler
  132 00000000                 AREA             MyCode,CODE,READONLY
  133 00000000                 ENTRY
  134 00000000                 EXPORT           Reset_Handler
  135 00000000         Reset_Handler
                               PROC             {}
  136 00000000         main
  137 00000000         ;---------------------------------------------------------------
  138 00000000         ;Initialize registers R0-R12
  139 00000000 F7FF FFFE       BL               RegInit
  140 00000004         ;>>>>> begin main program code <<<<<
  141 00000004 482E            LDR              R0,=P       ;obtain the address of the variable P. 
  142 00000006 6801            LDR              R1,[R0,#0]  ;Load value of P into the register R1
  143 00000008         
  144 00000008 482E            LDR              R0,=Q       ;obtain the address of the variable Q. 
  145 0000000A 6802            LDR              R2,[R0,#0]  ;Load value of Q into the register R2
  146 0000000C         
  147 0000000C 267F            MOVS             R6,#127     ;Load value 127 into R6 for easy comparision
  148 0000000E 2780            MOVS             R7,#128     ;Load value 128 into R7 for easy comparision
  149 00000010         ;Pseudo Code:
  150 00000010         ;while (F <= 127 && F => -128){
  151 00000010         ;F = 3P + 2Q -75;
  152 00000010         ;}
  153 00000010         ;while (G <= 127 && G => -128){
  154 00000010         ;G = 2P - 4Q + 63;
  155 00000010         ;}
  156 00000010         ;if ( F+G => -128 && F+G <= 127 ){



ARM Macro Assembler    Page 7 Program Title for Listing Header Goes Here


  157 00000010         ; Result = F+G;
  158 00000010         ;}
  159 00000010         
  160 00000010         ;Calculation for F
  161 00000010 482D            LDR              R0,=F
  162 00000012         
  163 00000012 004B            LSLS             R3,R1,#MUL2 ;R3 = 2P 
  164 00000014 185B            ADDS             R3,R3,R1    ;R3 += P
  165 00000016         ;compare
  166 00000016 42B3            CMP              R3,R6       ;127-R3 Check for Less than 127
  167 00000018 DC13            BGT              FZero
  168 0000001A 42FB            CMN              R3,R7       ;128-R3 Check for More than -128
  169 0000001C DB11            BLT              FZero
  170 0000001E         
  171 0000001E 0054            LSLS             R4,R2,#MUL2 ;R4 = 2Q
  172 00000020         ;compare 
  173 00000020 42B3            CMP              R3,R6       ;127-R3 Check for Less than 127
  174 00000022 DC0E            BGT              FZero
  175 00000024 42FB            CMN              R3,R7       ;128-R3 Check for More than -128
  176 00000026 DB0C            BLT              FZero
  177 00000028         
  178 00000028 191B            ADDS             R3,R3,R4    ;R3 = 3P +2Q
  179 0000002A         ;compare
  180 0000002A 42B3            CMP              R3,R6       ;127-R3 Check for Less than 127
  181 0000002C DC09            BGT              FZero
  182 0000002E 42FB            CMN              R3,R7       ;128-R3 Check for More than -128
  183 00000030 DB07            BLT              FZero
  184 00000032         
  185 00000032 4C26            LDR              R4,=const_F ;loading the constant term for f in R4
  186 00000034 6824            LDR              R4,[R4,#0]  ;
  187 00000036 1B1B            SUBS             R3,R3,R4    ;F-75 
  188 00000038         ;compare
  189 00000038 42B3            CMP              R3,R6       ;127-R3 Check for Less than 127
  190 0000003A DC02            BGT              FZero
  191 0000003C 42FB            CMN              R3,R7       ;128-R3 Check for More than -128
  192 0000003E DB00            BLT              FZero
  193 00000040         
  194 00000040 E000            B                FStore
  195 00000042         
  196 00000042 2300    FZero   MOVS             R3,#0       ;Sets F = 0
  197 00000044         
  198 00000044 6003    FStore  STR              R3,[R0,#0]



ARM Macro Assembler    Page 8 Program Title for Listing Header Goes Here


  199 00000046         
  200 00000046         
  201 00000046         ;Calculation for G
  202 00000046 4822            LDR              R0,=G
  203 00000048         
  204 00000048         
  205 00000048 004B            LSLS             R3,R1,#MUL2 ;R3 = 2P 
  206 0000004A         ;compare
  207 0000004A 42B3            CMP              R3,R6       ;127-R3 Check for Less than 127
  208 0000004C DC11            BGT              GZero
  209 0000004E 42FB            CMN              R3,R7       ;128-R3 Check for More than -128
  210 00000050 DB0F            BLT              GZero
  211 00000052         
  212 00000052 0094            LSLS             R4,R2,#MUL4 ;R4 = 4Q
  213 00000054         ;compare 
  214 00000054 42B3            CMP              R3,R6       ;127-R3 Check for Less than 127
  215 00000056 DC0C            BGT              GZero
  216 00000058 42FB            CMN              R3,R7       ;128-R3 Check for More than -128
  217 0000005A DB0A            BLT              GZero
  218 0000005C         
  219 0000005C 061B            LSLS             R3,R3,#24   ; Shift all the bits to the MSB for comparision
  220 0000005E 0624            LSLS             R4,R4,#24   ;
  221 00000060 1B1B            SUBS             R3,R3,R4    ;R3 = 2P - 4Q
  222 00000062 D606            BVS              GZero       ;Check for Overflow
  223 00000064         
  224 00000064 4C1B            LDR              R4,=const_G ;loading the constant term for f in R4
  225 00000066 6824            LDR              R4,[R4,#0]
  226 00000068         
  227 00000068 0624            LSLS             R4,R4,#24
  228 0000006A 191B            ADDS             R3,R3,R4    ;G + 63
  229 0000006C D601            BVS              GZero
  230 0000006E         
  231 0000006E 161B            ASRS             R3,R3,#24   ;Shift all the digits back to their original position
  232 00000070 E000            B                GStore
  233 00000072         
  234 00000072 2300    GZero   MOVS             R3,#0       ;Sets G = 0
  235 00000074         
  236 00000074 6003    GStore  STR              R3,[R0,#0]
  237 00000076         
  238 00000076         
  239 00000076         ;Calculation for Result
  240 00000076 4814            LDR              R0,=F



ARM Macro Assembler    Page 9 Program Title for Listing Header Goes Here


  241 00000078 6804            LDR              R4,[R0,#0]
  242 0000007A         
  243 0000007A 4815            LDR              R0,=G
  244 0000007C 6805            LDR              R5,[R0,#0]
  245 0000007E         
  246 0000007E 0624            LSLS             R4,R4,#24
  247 00000080 062D            LSLS             R5,R5,#24
  248 00000082         
  249 00000082 1963            ADDS             R3,R4,R5
  250 00000084 D601            BVS              ResultZero
  251 00000086         
  252 00000086 161B            ASRS             R3,R3,#24
  253 00000088         
  254 00000088 E000            B                ResultStore
  255 0000008A         
  256 0000008A 2300    ResultZero
                               MOVS             R3,#0       ;Sets Result = 0
  257 0000008C         
  258 0000008C 4812    ResultStore
                               LDR              R0,=Result
  259 0000008E 6003            STR              R3,[R0,#0]
  260 00000090         ;>>>>>   end main program code <<<<<
  261 00000090         ;Stay here
  262 00000090 E7FE            B                .
  263 00000092                 ENDP
  264 00000092         ;---------------------------------------------------------------
  265 00000092         RegInit PROC             {}
  266 00000092         ;****************************************************************
  267 00000092         ;Initializes register n to value 0xnnnnnnnn, for n in 
  268 00000092         ;{0x0-0xC,0xE}
  269 00000092         ;****************************************************************
  270 00000092         ;Put return on stack
  271 00000092 B500            PUSH             {LR}
  272 00000094         ;Initialize registers
  273 00000094 4913            LDR              R1,=0x11111111
  274 00000096 184A            ADDS             R2,R1,R1
  275 00000098 1853            ADDS             R3,R2,R1
  276 0000009A 185C            ADDS             R4,R3,R1
  277 0000009C 1865            ADDS             R5,R4,R1
  278 0000009E 186E            ADDS             R6,R5,R1
  279 000000A0 1877            ADDS             R7,R6,R1
  280 000000A2 1878            ADDS             R0,R7,R1



ARM Macro Assembler    Page 10 Program Title for Listing Header Goes Here


  281 000000A4 4680            MOV              R8,R0
  282 000000A6 1840            ADDS             R0,R0,R1
  283 000000A8 4681            MOV              R9,R0
  284 000000AA 1840            ADDS             R0,R0,R1
  285 000000AC 4682            MOV              R10,R0
  286 000000AE 1840            ADDS             R0,R0,R1
  287 000000B0 4683            MOV              R11,R0
  288 000000B2 1840            ADDS             R0,R0,R1
  289 000000B4 4684            MOV              R12,R0
  290 000000B6 1840            ADDS             R0,R0,R1
  291 000000B8 1840            ADDS             R0,R0,R1
  292 000000BA 4686            MOV              R14,R0
  293 000000BC 2000            MOVS             R0,#0
  294 000000BE BD00            POP              {PC}
  295 000000C0                 ENDP
  296 000000C0         ;---------------------------------------------------------------
  297 000000C0         ;>>>>> begin subroutine code <<<<<
  298 000000C0         ;>>>>>   end subroutine code <<<<<
  299 000000C0                 ALIGN
  300 000000C0         ;****************************************************************
  301 000000C0         ;Vector Table Mapped to Address 0 at Reset
  302 000000C0         ;Linker requires __Vectors to be exported
  303 000000C0 00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              11111111         AREA             RESET, DATA, READONLY
  304 00000000                 EXPORT           __Vectors
  305 00000000                 EXPORT           __Vectors_End
  306 00000000                 EXPORT           __Vectors_Size
  307 00000000         __Vectors
  308 00000000         ;ARM core vectors
  309 00000000 00000000        DCD              __initial_sp ;00:end of stack
  310 00000004 00000000        DCD              Reset_Handler ;reset vector
  311 00000008 00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 11 Program Title for Listing Header Goes Here


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 12 Program Title for Listing Header Goes Here


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00               SPACE            (VECTOR_TABLE_SIZE - (2 * VECTOR_SIZE))
  312 000000C0         __Vectors_End
  313 000000C0 000000C0 
                       __Vectors_Size
                               EQU              __Vectors_End - __Vectors
  314 000000C0                 ALIGN
  315 000000C0         ;****************************************************************
  316 000000C0         ;Constants
  317 000000C0                 AREA             MyConst,DATA,READONLY
  318 00000000         ;>>>>> begin constants here <<<<<
  319 00000000 0000004B 
                       const_F DCD              75
  320 00000004 0000003F 
                       const_G DCD              63
  321 00000008         ;>>>>>   end constants here <<<<<
  322 00000008         ;****************************************************************
  323 00000008                 AREA             |.ARM.__at_0x1FFFFC00|,DATA,READWRITE,ALIGN=3
  324 00000000                 EXPORT           __initial_sp
  325 00000000         ;Allocate system stack
  326 00000000                 IF               :LNOT::DEF:SSTACK_SIZE
  328                          ENDIF
  329 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 13 Program Title for Listing Header Goes Here


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 14 Program Title for Listing Header Goes Here


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       Stack_Mem
                               SPACE            SSTACK_SIZE
  330 00000100         __initial_sp
  331 00000100         ;****************************************************************



ARM Macro Assembler    Page 15 Program Title for Listing Header Goes Here


  332 00000100         ;Variables
  333 00000100                 AREA             MyData,DATA,READWRITE
  334 00000000         ;>>>>> begin variables here <<<<<
  335 00000000 00 00 00 
              00       F       SPACE            4
  336 00000004 00 00 00 
              00       G       SPACE            4
  337 00000008 00 00 00 
              00       P       SPACE            4
  338 0000000C 00 00 00 
              00       Q       SPACE            4
  339 00000010 00 00 00 
              00       Result  SPACE            4
  340 00000014         ;>>>>>   end variables here <<<<<
  341 00000014                 END
Command Line: --debug --xref --length=49 --width=120 --diag_suppress=9931 --cpu=Cortex-M0+ --apcs=interwork --depend=.\o
bjects\l3.d -o.\objects\l3.o -IC:\Users\shubh\AppData\Local\Arm\Packs\Keil\Kinetis_KLxx_DFP\1.14.0\Device\Include -IC:\K
eil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 533" --predefine="MKL05Z32xxx4 
SETA 1" --list=.\listings\l3.lst l3.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

FStore 00000044

Symbol: FStore
   Definitions
      At line 198 in file l3.s
   Uses
      At line 194 in file l3.s
Comment: FStore used once
FZero 00000042

Symbol: FZero
   Definitions
      At line 196 in file l3.s
   Uses
      At line 167 in file l3.s
      At line 169 in file l3.s
      At line 174 in file l3.s
      At line 176 in file l3.s
      At line 181 in file l3.s
      At line 183 in file l3.s
      At line 190 in file l3.s
      At line 192 in file l3.s

GStore 00000074

Symbol: GStore
   Definitions
      At line 236 in file l3.s
   Uses
      At line 232 in file l3.s
Comment: GStore used once
GZero 00000072

Symbol: GZero
   Definitions
      At line 234 in file l3.s
   Uses
      At line 208 in file l3.s
      At line 210 in file l3.s
      At line 215 in file l3.s
      At line 217 in file l3.s
      At line 222 in file l3.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 229 in file l3.s

MyCode 00000000

Symbol: MyCode
   Definitions
      At line 132 in file l3.s
   Uses
      None
Comment: MyCode unused
RegInit 00000092

Symbol: RegInit
   Definitions
      At line 265 in file l3.s
   Uses
      At line 139 in file l3.s
Comment: RegInit used once
Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 135 in file l3.s
   Uses
      At line 134 in file l3.s
      At line 310 in file l3.s

ResultStore 0000008C

Symbol: ResultStore
   Definitions
      At line 258 in file l3.s
   Uses
      At line 254 in file l3.s
Comment: ResultStore used once
ResultZero 0000008A

Symbol: ResultZero
   Definitions
      At line 256 in file l3.s
   Uses
      At line 250 in file l3.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

Comment: ResultZero used once
main 00000000

Symbol: main
   Definitions
      At line 136 in file l3.s
   Uses
      None
Comment: main unused
10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 303 in file l3.s
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 307 in file l3.s
   Uses
      At line 304 in file l3.s
      At line 313 in file l3.s

__Vectors_End 000000C0

Symbol: __Vectors_End
   Definitions
      At line 312 in file l3.s
   Uses
      At line 305 in file l3.s
      At line 313 in file l3.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

MyConst 00000000

Symbol: MyConst
   Definitions
      At line 317 in file l3.s
   Uses
      None
Comment: MyConst unused
const_F 00000000

Symbol: const_F
   Definitions
      At line 319 in file l3.s
   Uses
      At line 185 in file l3.s
Comment: const_F used once
const_G 00000004

Symbol: const_G
   Definitions
      At line 320 in file l3.s
   Uses
      At line 224 in file l3.s
Comment: const_G used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.ARM.__at_0x1FFFFC00 00000000

Symbol: .ARM.__at_0x1FFFFC00
   Definitions
      At line 323 in file l3.s
   Uses
      None
Comment: .ARM.__at_0x1FFFFC00 unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 329 in file l3.s
   Uses
      None
Comment: Stack_Mem unused
__initial_sp 00000100

Symbol: __initial_sp
   Definitions
      At line 330 in file l3.s
   Uses
      At line 309 in file l3.s
      At line 324 in file l3.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

F 00000000

Symbol: F
   Definitions
      At line 335 in file l3.s
   Uses
      At line 161 in file l3.s
      At line 240 in file l3.s

G 00000004

Symbol: G
   Definitions
      At line 336 in file l3.s
   Uses
      At line 202 in file l3.s
      At line 243 in file l3.s

MyData 00000000

Symbol: MyData
   Definitions
      At line 333 in file l3.s
   Uses
      None
Comment: MyData unused
P 00000008

Symbol: P
   Definitions
      At line 337 in file l3.s
   Uses
      At line 141 in file l3.s
Comment: P used once
Q 0000000C

Symbol: Q
   Definitions
      At line 338 in file l3.s
   Uses
      At line 144 in file l3.s
Comment: Q used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Result 00000010

Symbol: Result
   Definitions
      At line 339 in file l3.s
   Uses
      At line 258 in file l3.s
Comment: Result used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

APSR_C_MASK 20000000

Symbol: APSR_C_MASK
   Definitions
      At line 79 in file l3.s
   Uses
      At line 118 in file l3.s
Comment: APSR_C_MASK used once
APSR_C_SHIFT 0000001D

Symbol: APSR_C_SHIFT
   Definitions
      At line 80 in file l3.s
   Uses
      At line 119 in file l3.s
Comment: APSR_C_SHIFT used once
APSR_MASK F0000000

Symbol: APSR_MASK
   Definitions
      At line 73 in file l3.s
   Uses
      None
Comment: APSR_MASK unused
APSR_N_MASK 80000000

Symbol: APSR_N_MASK
   Definitions
      At line 75 in file l3.s
   Uses
      At line 114 in file l3.s
Comment: APSR_N_MASK used once
APSR_N_SHIFT 0000001F

Symbol: APSR_N_SHIFT
   Definitions
      At line 76 in file l3.s
   Uses
      At line 115 in file l3.s
Comment: APSR_N_SHIFT used once
APSR_SHIFT 0000001C




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: APSR_SHIFT
   Definitions
      At line 74 in file l3.s
   Uses
      None
Comment: APSR_SHIFT unused
APSR_V_MASK 10000000

Symbol: APSR_V_MASK
   Definitions
      At line 81 in file l3.s
   Uses
      At line 120 in file l3.s
Comment: APSR_V_MASK used once
APSR_V_SHIFT 0000001C

Symbol: APSR_V_SHIFT
   Definitions
      At line 82 in file l3.s
   Uses
      At line 121 in file l3.s
Comment: APSR_V_SHIFT used once
APSR_Z_MASK 40000000

Symbol: APSR_Z_MASK
   Definitions
      At line 77 in file l3.s
   Uses
      At line 116 in file l3.s
Comment: APSR_Z_MASK used once
APSR_Z_SHIFT 0000001E

Symbol: APSR_Z_SHIFT
   Definitions
      At line 78 in file l3.s
   Uses
      At line 117 in file l3.s
Comment: APSR_Z_SHIFT used once
BYTE_BITS 00000008

Symbol: BYTE_BITS
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 25 in file l3.s
   Uses
      None
Comment: BYTE_BITS unused
BYTE_MASK 000000FF

Symbol: BYTE_MASK
   Definitions
      At line 22 in file l3.s
   Uses
      None
Comment: BYTE_MASK unused
CONTROL_SPSEL_MASK 00000002

Symbol: CONTROL_SPSEL_MASK
   Definitions
      At line 49 in file l3.s
   Uses
      None
Comment: CONTROL_SPSEL_MASK unused
CONTROL_SPSEL_SHIFT 00000001

Symbol: CONTROL_SPSEL_SHIFT
   Definitions
      At line 50 in file l3.s
   Uses
      None
Comment: CONTROL_SPSEL_SHIFT unused
CONTROL_nPRIV_MASK 00000001

Symbol: CONTROL_nPRIV_MASK
   Definitions
      At line 51 in file l3.s
   Uses
      None
Comment: CONTROL_nPRIV_MASK unused
CONTROL_nPRIV_SHIFT 00000000

Symbol: CONTROL_nPRIV_SHIFT
   Definitions
      At line 52 in file l3.s
   Uses



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

      None
Comment: CONTROL_nPRIV_SHIFT unused
EPSR_MASK 01000000

Symbol: EPSR_MASK
   Definitions
      At line 88 in file l3.s
   Uses
      None
Comment: EPSR_MASK unused
EPSR_SHIFT 00000018

Symbol: EPSR_SHIFT
   Definitions
      At line 89 in file l3.s
   Uses
      None
Comment: EPSR_SHIFT unused
EPSR_T_MASK 01000000

Symbol: EPSR_T_MASK
   Definitions
      At line 90 in file l3.s
   Uses
      At line 122 in file l3.s
Comment: EPSR_T_MASK used once
EPSR_T_SHIFT 00000018

Symbol: EPSR_T_SHIFT
   Definitions
      At line 91 in file l3.s
   Uses
      At line 123 in file l3.s
Comment: EPSR_T_SHIFT used once
HALFWORD_MASK 0000FFFF

Symbol: HALFWORD_MASK
   Definitions
      At line 31 in file l3.s
   Uses
      None
Comment: HALFWORD_MASK unused



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

HALFWORD_SIZE 00000002

Symbol: HALFWORD_SIZE
   Definitions
      At line 29 in file l3.s
   Uses
      None
Comment: HALFWORD_SIZE unused
IPSR_EXCEPTION_MASK 0000003F

Symbol: IPSR_EXCEPTION_MASK
   Definitions
      At line 111 in file l3.s
   Uses
      At line 124 in file l3.s
Comment: IPSR_EXCEPTION_MASK used once
IPSR_EXCEPTION_SHIFT 00000000

Symbol: IPSR_EXCEPTION_SHIFT
   Definitions
      At line 112 in file l3.s
   Uses
      At line 125 in file l3.s
Comment: IPSR_EXCEPTION_SHIFT used once
IPSR_MASK 0000003F

Symbol: IPSR_MASK
   Definitions
      At line 109 in file l3.s
   Uses
      None
Comment: IPSR_MASK unused
IPSR_SHIFT 00000000

Symbol: IPSR_SHIFT
   Definitions
      At line 110 in file l3.s
   Uses
      None
Comment: IPSR_SHIFT unused
MUL2 00000001




ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

Symbol: MUL2
   Definitions
      At line 19 in file l3.s
   Uses
      At line 163 in file l3.s
      At line 171 in file l3.s
      At line 205 in file l3.s

MUL4 00000002

Symbol: MUL4
   Definitions
      At line 20 in file l3.s
   Uses
      At line 212 in file l3.s
Comment: MUL4 used once
NIBBLE_BITS 00000004

Symbol: NIBBLE_BITS
   Definitions
      At line 26 in file l3.s
   Uses
      None
Comment: NIBBLE_BITS unused
NIBBLE_MASK 0000000F

Symbol: NIBBLE_MASK
   Definitions
      At line 23 in file l3.s
   Uses
      None
Comment: NIBBLE_MASK unused
PRIMASK_PM_MASK 00000001

Symbol: PRIMASK_PM_MASK
   Definitions
      At line 61 in file l3.s
   Uses
      None
Comment: PRIMASK_PM_MASK unused
PRIMASK_PM_SHIFT 00000000




ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols

Symbol: PRIMASK_PM_SHIFT
   Definitions
      At line 62 in file l3.s
   Uses
      None
Comment: PRIMASK_PM_SHIFT unused
PSR_C_MASK 20000000

Symbol: PSR_C_MASK
   Definitions
      At line 118 in file l3.s
   Uses
      None
Comment: PSR_C_MASK unused
PSR_C_SHIFT 0000001D

Symbol: PSR_C_SHIFT
   Definitions
      At line 119 in file l3.s
   Uses
      None
Comment: PSR_C_SHIFT unused
PSR_EXCEPTION_MASK 0000003F

Symbol: PSR_EXCEPTION_MASK
   Definitions
      At line 124 in file l3.s
   Uses
      None
Comment: PSR_EXCEPTION_MASK unused
PSR_EXCEPTION_SHIFT 00000000

Symbol: PSR_EXCEPTION_SHIFT
   Definitions
      At line 125 in file l3.s
   Uses
      None
Comment: PSR_EXCEPTION_SHIFT unused
PSR_N_MASK 80000000

Symbol: PSR_N_MASK
   Definitions



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Absolute symbols

      At line 114 in file l3.s
   Uses
      None
Comment: PSR_N_MASK unused
PSR_N_SHIFT 0000001F

Symbol: PSR_N_SHIFT
   Definitions
      At line 115 in file l3.s
   Uses
      None
Comment: PSR_N_SHIFT unused
PSR_T_MASK 01000000

Symbol: PSR_T_MASK
   Definitions
      At line 122 in file l3.s
   Uses
      None
Comment: PSR_T_MASK unused
PSR_T_SHIFT 00000018

Symbol: PSR_T_SHIFT
   Definitions
      At line 123 in file l3.s
   Uses
      None
Comment: PSR_T_SHIFT unused
PSR_V_MASK 10000000

Symbol: PSR_V_MASK
   Definitions
      At line 120 in file l3.s
   Uses
      None
Comment: PSR_V_MASK unused
PSR_V_SHIFT 0000001C

Symbol: PSR_V_SHIFT
   Definitions
      At line 121 in file l3.s
   Uses



ARM Macro Assembler    Page 9 Alphabetic symbol ordering
Absolute symbols

      None
Comment: PSR_V_SHIFT unused
PSR_Z_MASK 40000000

Symbol: PSR_Z_MASK
   Definitions
      At line 116 in file l3.s
   Uses
      None
Comment: PSR_Z_MASK unused
PSR_Z_SHIFT 0000001E

Symbol: PSR_Z_SHIFT
   Definitions
      At line 117 in file l3.s
   Uses
      None
Comment: PSR_Z_SHIFT unused
RET_ADDR_T_MASK 00000001

Symbol: RET_ADDR_T_MASK
   Definitions
      At line 33 in file l3.s
   Uses
      None
Comment: RET_ADDR_T_MASK unused
SSTACK_SIZE 00000100

Symbol: SSTACK_SIZE
   Definitions
      At line 128 in file l3.s
   Uses
      At line 329 in file l3.s
Comment: SSTACK_SIZE used once
VECTOR_SIZE 00000004

Symbol: VECTOR_SIZE
   Definitions
      At line 39 in file l3.s
   Uses
      At line 311 in file l3.s
Comment: VECTOR_SIZE used once



ARM Macro Assembler    Page 10 Alphabetic symbol ordering
Absolute symbols

VECTOR_TABLE_SIZE 000000C0

Symbol: VECTOR_TABLE_SIZE
   Definitions
      At line 38 in file l3.s
   Uses
      At line 311 in file l3.s
Comment: VECTOR_TABLE_SIZE used once
WORD_SIZE 00000004

Symbol: WORD_SIZE
   Definitions
      At line 28 in file l3.s
   Uses
      None
Comment: WORD_SIZE unused
__Vectors_Size 000000C0

Symbol: __Vectors_Size
   Definitions
      At line 313 in file l3.s
   Uses
      At line 306 in file l3.s
Comment: __Vectors_Size used once
50 symbols
410 symbols in table
